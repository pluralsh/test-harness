apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  labels:
    control-plane: controller-manager
    {{ include "test-harness.labels" . | nindent 4  }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - /manager
        {{ if gt .Values.replicaCount 1.0 }}
        args:
        - --leader-elect
        {{ end }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: manager
        pullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: operator-env
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 8081
          name: health
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          {{ toYaml .Values.resources | nindent 10 }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 10
